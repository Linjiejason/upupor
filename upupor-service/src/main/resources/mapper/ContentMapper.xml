<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~
  ~   ~ MIT License
  ~   ~
  ~   ~ Copyright (c) 2021-2022 yangrunkang
  ~   ~
  ~   ~ Author: yangrunkang
  ~   ~ Email: yangrunkang53@gmail.com
  ~   ~
  ~   ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~   ~ of this software and associated documentation files (the "Software"), to deal
  ~   ~ in the Software without restriction, including without limitation the rights
  ~   ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~   ~ copies of the Software, and to permit persons to whom the Software is
  ~   ~ furnished to do so, subject to the following conditions:
  ~   ~
  ~   ~ The above copyright notice and this permission notice shall be included in all
  ~   ~ copies or substantial portions of the Software.
  ~   ~
  ~   ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~   ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~   ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~   ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~   ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~   ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~   ~ SOFTWARE.
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.upupor.service.data.dao.mapper.ContentMapper">
    <resultMap id="BaseResultMap" type="com.upupor.service.data.dao.entity.Content">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="content_id" jdbcType="VARCHAR" property="contentId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="short_content" jdbcType="VARCHAR" property="shortContent"/>
        <result column="keywords" jdbcType="VARCHAR" property="keywords"/>
        <result column="picture" jdbcType="VARCHAR" property="picture"/>
        <result column="content_type" jdbcType="INTEGER" property="contentType"/>
        <result column="tag_ids" jdbcType="INTEGER" property="tagIds"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="is_initial_status" jdbcType="VARCHAR" property="isInitialStatus"/>
        <result column="edit_times" jdbcType="INTEGER" property="editTimes"/>
        <result column="pinned_status" jdbcType="INTEGER" property="pinnedStatus"/>
        <result column="origin_type" jdbcType="INTEGER" property="originType"/>
        <result column="none_origin_link" jdbcType="VARCHAR" property="noneOriginLink"/>
        <result column="statement_id" jdbcType="INTEGER" property="statementId"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="latest_comment_time" jdbcType="BIGINT" property="latestCommentTime"/>
        <result column="latest_comment_user_id" jdbcType="VARCHAR" property="latestCommentUserId"/>
        <result column="sys_update_time" jdbcType="TIMESTAMP" property="sysUpdateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, content_id, user_id, latest_comment_user_id, title,is_initial_status,statement_id,
        short_content,keywords,pinned_status, edit_times, origin_type, none_origin_link, content_type, tag_ids, status,
        create_time,latest_comment_time,
        sys_update_time,picture,edit_time
    </sql>
    <sql id="Base_Column_List_Alias">
        ct.id, ct.content_id, ct.user_id,ct.latest_comment_user_id, ct.title, ct.statement_id, ct.short_content,
        ct.keywords, ct.is_initial_status, ct.content_type, ct.origin_type, ct.none_origin_link, ct.edit_times,
        ct.tag_ids, ct.status, ct.create_time,ct.latest_comment_time,
        ct.sys_update_time,ct.picture
    </sql>

    <select id="listByContentIdList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from content
        where content_id in
        <foreach collection="contentIdList" close=")" open="(" separator="," item="contentId">
            ${contentId}
        </foreach>
        order by create_time desc
    </select>

    <select id="listAllByUserId" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from content
        where user_id in
        <foreach collection="userIdList" close=")" open="(" separator="," item="userId">
            #{userId,jdbcType=VARCHAR}
        </foreach>
        and status = 0
        order by create_time desc
    </select>

    <select id="list" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from content
        where status = 0
        order by create_time desc
    </select>

    <sql id="lastCommon">
        and content_type = #{contentType}
        <if test="tagIds != null and tagIds != ''">
            and tag_ids = #{tagIds}
        </if>
    </sql>
    <select id="lastAndNextContent" parameterType="java.lang.String" resultType="java.lang.String">
        select * from (
        select content_id as nextId from content where `status` = 0
        <include refid="lastCommon"/>
        and latest_comment_time <![CDATA[ > ]]> (select latest_comment_time from content where `status` = 0
        and content_id = #{contentId,jdbcType=VARCHAR}
        <include refid="lastCommon"/>
        )
        order by latest_comment_time asc limit 1
        ) as t
        UNION ALl
        select * from (
        select content_id as lastId from content where `status` = 0
        <include refid="lastCommon"/>
        and latest_comment_time <![CDATA[ < ]]> (select latest_comment_time from content where status = 0
        and content_id = #{contentId,jdbcType=VARCHAR}
        <include refid="lastCommon"/>
        )
        order by latest_comment_time desc limit 1
        ) as c
    </select>

    <select id="total" resultType="java.lang.Integer">
        select
        count(*)
        from content
        where status = 0
    </select>
    <select id="totalByUserId" resultType="java.lang.Integer">
        select
        count(*)
        from content
        where status = 0 and user_id = #{userId,jdbcType=VARCHAR}
    </select>

    <select id="countDraft" resultType="java.lang.Integer">
        select
        count(*)
        from content
        where status = 1 and user_id = #{userId,jdbcType=VARCHAR}
    </select>


    <select id="randomContent" resultType="java.lang.String" parameterType="java.lang.String">
        select distinct content_id from content where status = 0 and user_id != #{notUserId,jdbcType=VARCHAR} order by
        rand() limit 10
    </select>

</mapper>
